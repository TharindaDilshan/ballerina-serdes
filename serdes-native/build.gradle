plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs'
    // id 'eclipse'
    // id 'com.google.protobuf'
}

dependencies {
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: "${protobufVersion}"
    // compile 'com.google.protobuf:protobuf-gradle-plugin:0.8.14'

    checkstyle project(':build-config:checkstyle')
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstylePluginVersion}"

    compile group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-runtime', version: "${ballerinaLangVersion}"
}

checkstyle {
    toolVersion '7.8.2'
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
    configProperties = ["suppressionFile" : file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
}

checkstyleMain.dependsOn(":build-config:checkstyle:downloadMultipleFiles")

spotbugsMain {
    effort "max"
    reportLevel "low"
    reportsDir = file("$project.buildDir/reports/spotbugs")
    reports {
        html.enabled true
        text.enabled = true
    }
    def excludeFile = file("${rootDir}/spotbugs-exclude.xml")
    if(excludeFile.exists()) {
        excludeFilter = excludeFile
    }
}

def excludePattern = '**/module-info.java'
tasks.withType(Checkstyle) {
    exclude excludePattern
    exclude '**/Serializer.java'
    exclude '**/Deserializer.java'
    exclude '**/SchemaGenerator.java'
    exclude '**/ProtobufSchemaBuilder.java'
}

spotbugsTest {
    enabled = false
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
